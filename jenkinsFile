node {
    ansiColor('xterm') {
        stage('Checkout Test Framework') { // for display purposes
            // Get the test code from GitHub repository
            git(
                url: 'https://github.com/Coveros/selenified.git',
                branch: 'selenium3'
            )
            sh "rm -rf target*"
            sh "rm -rf jacoco*"
        }
        stage('Run Unit Tests') {
            sh "mvn clean test"
            sh "mv target target-unit"
        }
        stage('Execute HTMLUnit Tests') {
            timeout(time:240, unit:'MINUTES') {
                try {
                    sh "rm -rf ~/.m2/repository/webdriver/"
                    sh 'mvn clean verify -Dskip.unit.tests -Dbrowser=htmlunit'
                } catch (e) {
                    echo "ERROR: ${e}"
                } finally {
                    sh "cat target/coverage-reports/jacoco-it.exec >> jacoco-it.exec;"
                    sh "mv target target-htmlunit";
                }
            }
        }
        stage('Execute Chrome Tests') {
            timeout(time:240, unit:'MINUTES') {
                try {
                    sh "rm -rf ~/.m2/repository/webdriver/"
                    sh 'mvn clean verify -Dskip.unit.tests -Dbrowser=chrome'
                } catch (e) {
                    echo "ERROR: ${e}"
                } finally {
                    sh "cat target/coverage-reports/jacoco-it.exec >> jacoco-it.exec;"
                    sh "mv target target-chrome";
                }
            }
        }
        stage('Execute Firefox Tests') {
            timeout(time:240, unit:'MINUTES') {
                try {
                    sh "rm -rf ~/.m2/repository/webdriver/"
                    sh 'mvn clean verify -Dskip.unit.tests -Dbrowser=firefox'
                } catch (e) {
                    echo "ERROR: ${e}"
                } finally {
                    sh "cat target/coverage-reports/jacoco-it.exec >> jacoco-it.exec;"
                    sh "mv target target-firefox";
                }
            }
        }
        stage('Perform SonarQube Analysis') {
            sh """
                mvn clean compile sonar:sonar \
                        -Dsonar.host.url=http://localhost:9000/sonar \
                        -Dsonar.junit.reportPaths="target-unit/surefire-reports,target-htmlunit/failsafe-reports,target-chrome/failsafe-reports,target-firefox/failsafe-reports" \
                        -Dsonar.jacoco.reportPath=target-unit/coverage-reports/jacoco-ut.exec \
                        -Dsonar.jacoco.itReportPath=jacoco-it.exec
            """
        }
        stage('Store Test Results') {
            junit '**/target*/failsafe-reports/TEST-*.xml'
            junit '**/target*/surefire-reports/TEST-*.xml'
        }
    }
}